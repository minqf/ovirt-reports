<?xml version="1.0" encoding="UTF-8"?>
<query>
    <folder>/reports_resources/JDBC/Input_Controls/Period_Affected/single_select/vm_ic</folder>
    <name>VM_List</name>
    <version>28</version>
    <label>VM List</label>
    <creationDate>2014-03-03T12:38:21.944+02:00</creationDate>
    <updateDate>2014-03-04T11:09:23.345+02:00</updateDate>
    <language>sql</language>
    <queryString>-- This query will return the vms list filtered by the chosen
-- datacenter, cluster and vms type

SELECT DISTINCT
    delete_date,
    CASE
        WHEN delete_date IS NULL
            THEN vm_name
        ELSE
            vm_name
            ||
            ' ('
            ||
            loc_removed_on.removed_on
            ||
            ' '
            ||
            to_char(
                delete_date,
                $P{datetimelocalepattern}
            )
            ||
            ')'
    END AS combo_name,
    CAST ( vm_id AS varchar )
FROM v4_0_configuration_history_vms
    LEFT OUTER JOIN (
        SELECT DISTINCT
            COALESCE (
                    enum_translator_localized.value_localized,
                    enum_translator_default.value
            )
            AS removed_on
        FROM enum_translator AS enum_translator_default
            LEFT OUTER JOIN (
                SELECT
                    enum_type,
                    enum_key,
                    value AS value_localized
                FROM enum_translator
                WHERE language_code = $P{userlocale}
            )
            AS enum_translator_localized
                ON (
                    enum_translator_localized.enum_type =
                    enum_translator_default.enum_type
                    AND enum_translator_localized.enum_key =
                    enum_translator_default.enum_key
                )
        WHERE enum_translator_default.language_code = 'en_US'
        AND enum_translator_default.enum_type = 'REPORTS_REMOVED_ON'
    )
    AS loc_removed_on
        ON ( 0 = 0 )
-- Filter vms list according to the datacenter that was chosen by the user
WHERE v4_0_configuration_history_vms.cluster_id IN (
    SELECT v4_0_configuration_history_clusters.cluster_id
    FROM v4_0_configuration_history_clusters
    WHERE v4_0_configuration_history_clusters.datacenter_id =
    CAST ( $P{P_DataCenter_ID} AS uuid )
)
-- Filter vms list according to the cluster that was chosen by the user
AND v4_0_configuration_history_vms.cluster_id =
    CASE $P{P_Cluster_ID}
        WHEN '11111111-1111-1111-1111-111111111111'
            THEN v4_0_configuration_history_vms.cluster_id
        ELSE CAST ( $P{P_Cluster_ID} AS uuid )
    END
-- Filter vms list according to the vm type that was chosen by the user
AND v4_0_configuration_history_vms.vm_type =
    CASE CAST ( $P{P_VM_Type} AS int )
        WHEN -1
            THEN v4_0_configuration_history_vms.vm_type
        WHEN NULL
            THEN v4_0_configuration_history_vms.vm_type
        ELSE CAST ( $P{P_VM_Type} AS int )
    END
-- Latest vms configuration
AND history_id IN (
    SELECT MAX ( a.history_id )
    FROM v4_0_configuration_history_vms AS a
    GROUP BY a.vm_id
)
AND create_date &lt;=
CASE
        WHEN $P{P_Period} = 0
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 day'
        WHEN $P{P_Period} = 1
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 month'
        WHEN $P{P_Period} = 2
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '3 month'
        WHEN $P{P_Period} = 3
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 year'
    END
AND (
    delete_date IS NULL
    OR
    delete_date &gt;= CAST ( $P{P_Start_Date} AS timestamp )
)
-- This will determine if deleted entities will be included in the report,
-- according to the user selection for "is_deleted" parameter
$P!{is_deleted}
ORDER BY delete_date DESC, combo_name</queryString>
    <dataSource>
        <uri>/reports_resources/JDBC/data_sources/ovirt</uri>
    </dataSource>
</query>
