<?xml version="1.0" encoding="UTF-8"?>
<inputControl>
    <folder>/reports_resources/JDBC/Input_Controls/Period_Affected/single_select/storage_ic</folder>
    <name>P_StorageDomain_ID</name>
    <version>28</version>
    <label>$R{ic.storage.domain.name}</label>
    <description>Storage Domain Name</description>
    <creationDate>2014-03-03T12:38:16.851+02:00</creationDate>
    <updateDate>2014-03-04T09:37:42.669+02:00</updateDate>
    <type>4</type>
    <mandatory>true</mandatory>
    <readOnly>false</readOnly>
    <visible>true</visible>
    <query>
        <localResource
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="query">
            <folder>/reports_resources/JDBC/Input_Controls/Period_Affected/single_select/storage_ic/P_StorageDomain_ID_files</folder>
            <name>Storage_Domain_Name</name>
            <version>1</version>
            <label>Storage_Domain_Name</label>
            <description>Storage Domain Query</description>
            <creationDate>2014-03-04T09:37:42.669+02:00</creationDate>
            <updateDate>2014-03-04T09:37:42.669+02:00</updateDate>
            <language>sql</language>
            <queryString>-- This query will return the storage domain name list filtered by the chosen
-- datacenter and storage type.

SELECT DISTINCT
    CAST ( v4_0_configuration_history_storage_domains.storage_domain_id AS varchar ),
    detach_date,
    CASE
        WHEN detach_date IS NULL
            THEN storage_domain_name
        ELSE
            storage_domain_name
            ||
            ' ('
            ||
            loc_detached_on.detached_on
            ||
            ' '
            ||
            to_char(
                detach_date,
                $P{datetimelocalepattern}
            )
            ||
            ')'
    END AS combo_name
FROM v4_0_configuration_history_storage_domains
    -- Filter storage domain list according to the datacenter that was chosen by the user
    INNER JOIN v4_0_map_history_datacenters_storage_domains
        ON (
            v4_0_map_history_datacenters_storage_domains.storage_domain_id =
            v4_0_configuration_history_storage_domains.storage_domain_id
            AND v4_0_map_history_datacenters_storage_domains.datacenter_id =
            CAST ( $P{P_DataCenter_ID} AS uuid )
        )
    LEFT OUTER JOIN (
        SELECT DISTINCT
            COALESCE (
                    enum_translator_localized.value_localized,
                    enum_translator_default.value
            )
            AS detached_on
        FROM enum_translator AS enum_translator_default
            LEFT OUTER JOIN (
                SELECT
                    enum_type,
                    enum_key,
                    value AS value_localized
                FROM enum_translator
                WHERE language_code = $P{userlocale}
            )
            AS enum_translator_localized
                ON (
                    enum_translator_localized.enum_type =
                    enum_translator_default.enum_type
                    AND enum_translator_localized.enum_key =
                    enum_translator_default.enum_key
                )
        WHERE enum_translator_default.language_code = 'en_US'
        AND enum_translator_default.enum_type = 'REPORTS_DETACHED_ON'
    )
    AS loc_detached_on
        ON ( 0 = 0 )
-- Filter by storage domain type chosen by the user
WHERE  v4_0_configuration_history_storage_domains.storage_domain_type =
    CASE
        CAST ( $P{P_Storage_Type} AS int )
            WHEN NULL
                THEN  v4_0_configuration_history_storage_domains.storage_domain_type
            WHEN -1
                THEN v4_0_configuration_history_storage_domains.storage_domain_type
            ELSE CAST ( $P{P_Storage_Type} AS int )
        END
-- Latest datacenter_storage domain map configurations
AND v4_0_map_history_datacenters_storage_domains.history_id IN (
    SELECT MAX ( a.history_id )
    FROM v4_0_map_history_datacenters_storage_domains a
    GROUP BY a.storage_domain_id, a.datacenter_id
)
-- Latest storage domain configurations
AND v4_0_configuration_history_storage_domains.history_id IN (
    SELECT MAX ( b.history_id )
    FROM v4_0_configuration_history_storage_domains b
    GROUP BY b.storage_domain_id
)
AND create_date &lt;=
CASE
        WHEN $P{P_Period} = 0
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 day'
        WHEN $P{P_Period} = 1
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 month'
        WHEN $P{P_Period} = 2
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '3 month'
        WHEN $P{P_Period} = 3
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 year'
    END
AND (
    delete_date IS NULL
    OR
    delete_date &gt;= CAST ( $P{P_Start_Date} AS TIMESTAMP )
)
AND attach_date &lt;=
CASE
        WHEN $P{P_Period} = 0
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 day'
        WHEN $P{P_Period} = 1
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 month'
        WHEN $P{P_Period} = 2
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '3 month'
        WHEN $P{P_Period} = 3
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 year'
    END
AND (
    delete_date IS NULL
    OR
    delete_date &gt;= CAST ( $P{P_Start_Date} AS TIMESTAMP )
)
-- This will determine if deleted entities will be included in the report,
-- according to the user selection for "is_deleted" parameter
$P!{is_deleted}
ORDER BY detach_date DESC, combo_name
</queryString>
            <dataSource>
                <uri>/reports_resources/JDBC/data_sources/ovirt</uri>
            </dataSource>
        </localResource>
    </query>
    <queryVisibleColumn>combo_name</queryVisibleColumn>
    <queryValueColumn>storage_domain_id</queryValueColumn>
</inputControl>
