<?xml version="1.0" encoding="UTF-8"?>
<inputControl>
    <folder>/reports_resources/JDBC/Input_Controls/Period_Affected/single_select/cluster_ic/all_clusters_with_hosts</folder>
    <name>P_Cluster_ID</name>
    <version>28</version>
    <label>$R{ic.cluster}</label>
    <creationDate>2014-03-02T14:51:09.676+02:00</creationDate>
    <updateDate>2014-03-03T09:33:49.152+02:00</updateDate>
    <type>4</type>
    <mandatory>true</mandatory>
    <readOnly>false</readOnly>
    <visible>true</visible>
    <query>
        <localResource
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="query">
            <folder>/reports_resources/JDBC/Input_Controls/Period_Affected/single_select/cluster_ic/all_clusters_with_hosts/P_Cluster_ID_files</folder>
            <name>Cluster</name>
            <version>1</version>
            <label>Cluster</label>
            <creationDate>2014-03-03T09:33:49.152+02:00</creationDate>
            <updateDate>2014-03-03T09:33:49.152+02:00</updateDate>
            <language>sql</language>
            <queryString>-- all_clusters_with_hosts - Cluster.

-- This query will return the clusters list according to the datacenter that was chosen
-- as well as the "All" option", for clusters that have hosts.

--The list can include deleted clusters, according to the value of the "is_deleted" parameter.
--The deleted cluster names will be concatenated along with their remove date.

SELECT DISTINCT
    CAST ( cluster_id AS varchar ),
    delete_date,
    CASE
        WHEN delete_date IS NULL
            THEN RTRIM ( CAST ( cluster_name  AS varchar ) )
        ELSE
            cluster_name
            ||
            ' ('
            ||
            loc_removed_on.removed_on
            ||
            ' '
            ||
            to_char ( delete_date, $P{datetimelocalepattern} )
            ||
            ')'
    END
    AS combo_name,
    0 AS sort
FROM v4_0_configuration_history_clusters
    LEFT OUTER JOIN (
        SELECT DISTINCT
            COALESCE (
                enum_translator_localized.value_localized,
                enum_translator_default.value
            )
            AS removed_on
        FROM enum_translator AS enum_translator_default
        LEFT OUTER JOIN (
            SELECT
                enum_type,
                enum_key,
                value AS value_localized
            FROM enum_translator
            WHERE language_code = $P{userlocale}
        )
        AS enum_translator_localized
            ON (
                enum_translator_localized.enum_type =
                enum_translator_default.enum_type
                AND enum_translator_localized.enum_key =
                enum_translator_default.enum_key
            )
        WHERE enum_translator_default.language_code = 'en_US'
        AND enum_translator_default.enum_type = 'REPORTS_REMOVED_ON'
    )
    AS loc_removed_on
        ON ( 0 = 0 )
WHERE cluster_id IN (
    SELECT DISTINCT cluster_id
    FROM v4_0_configuration_history_hosts
    WHERE history_id IN (
        SELECT MAX ( a.history_id )
        FROM v4_0_configuration_history_hosts a
        GROUP BY a.host_id
    )
    AND create_date &lt;=
    CASE
        WHEN $P{P_Period} = 0
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 day'
        WHEN $P{P_Period} = 1
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 month'
        WHEN $P{P_Period} = 2
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '3 month'
        WHEN $P{P_Period} = 3
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 year'
    END
    AND (
        delete_date IS NULL
        OR
        delete_date &gt;= CAST ( $P{P_Start_Date} AS timestamp )
    )
    $P!{is_deleted}
)
AND datacenter_id = CAST ( $P{P_DataCenter_ID} AS uuid )
AND history_id IN (
    SELECT MAX ( a.history_id )
    FROM v4_0_configuration_history_clusters a
    GROUP BY a.cluster_id
)
AND create_date &lt;=
    CASE
        WHEN $P{P_Period} = 0
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 day'
        WHEN $P{P_Period} = 1
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 month'
        WHEN $P{P_Period} = 2
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '3 month'
        WHEN $P{P_Period} = 3
            THEN CAST ( $P{P_Start_Date} AS timestamp ) + interval '1 year'
    END
AND (
    delete_date IS NULL
    OR
    delete_date &gt;= CAST ( $P{P_Start_Date} AS timestamp )
)
$P!{is_deleted}

UNION ALL

-- Adding to the clusters list the "All" as the first option in the select list.
SELECT DISTINCT
    '11111111-1111-1111-1111-111111111111',
    CAST(NULL AS timestamp),
    COALESCE (
        enum_translator_localized.value_localized,
        enum_translator_default.value
    )
    AS value,
    1
FROM enum_translator AS enum_translator_default
    LEFT OUTER JOIN (
        SELECT
            enum_type,
            enum_key,
            value AS value_localized
        FROM enum_translator
        WHERE language_code = $P{userlocale}
    )
    AS enum_translator_localized
        ON (
            enum_translator_localized.enum_type =
            enum_translator_default.enum_type
            AND enum_translator_localized.enum_key =
            enum_translator_default.enum_key
        )
WHERE language_code = 'en_US'
           AND enum_translator_default.enum_type = 'REPORTS_ALL'
           AND enum_translator_default.enum_key = 0
ORDER BY sort DESC, delete_date DESC, combo_name
</queryString>
            <dataSource>
                <uri>/reports_resources/JDBC/data_sources/ovirt</uri>
            </dataSource>
        </localResource>
    </query>
    <queryVisibleColumn>combo_name</queryVisibleColumn>
    <queryValueColumn>cluster_id</queryValueColumn>
</inputControl>
